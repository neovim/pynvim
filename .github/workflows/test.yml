name: ci
on:
  push:
  pull_request:
    branches:
      - 'master'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.repository_owner == 'neovim' && github.sha || github.ref_name }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        cache: 'pip'
        python-version: 3.11
    - name: install dependencies
      run: python3 -m pip install tox tox-gh-actions
    - name: checkqa
      run: tox run -e checkqa,docs

  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.10', '3.11', '3.12-dev']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        include:
        - os: ubuntu-20.04
          python-version: '3.7'
          NIGHTLY: nvim-linux64.tar.gz
          NVIM_BIN_PATH: nvim-linux64/bin
          EXTRACT: tar xzf
        - os: ubuntu-latest
          python-version: '3.8'
          NIGHTLY: nvim-linux64.tar.gz
          NVIM_BIN_PATH: nvim-linux64/bin
          EXTRACT: tar xzf
        - os: ubuntu-latest
          python-version: '3.9'
          NIGHTLY: nvim-linux64.tar.gz
          NVIM_BIN_PATH: nvim-linux64/bin
          EXTRACT: tar xzf
        - os: ubuntu-latest
          NIGHTLY: nvim-linux64.tar.gz
          NVIM_BIN_PATH: nvim-linux64/bin
          EXTRACT: tar xzf
        - os: macos-latest
          NIGHTLY: nvim-macos.tar.gz
          NVIM_BIN_PATH: nvim-macos/bin
          EXTRACT: tar xzf
        - os: windows-latest
          NIGHTLY: nvim-win64.zip
          NVIM_BIN_PATH: nvim-win64/bin
          EXTRACT: unzip

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        cache: 'pip'
        python-version: ${{ matrix.python-version }}

    - name: install neovim
      run: |
        curl -LO 'https://github.com/neovim/neovim/releases/download/nightly/${{ matrix.NIGHTLY }}'
        ${{ matrix.EXTRACT }} ${{ matrix.NIGHTLY }}
        echo '${{ runner.os }}'

    - name: update path (bash)
      if: runner.os != 'Windows'
      run: echo "$(pwd)/${{ matrix.NVIM_BIN_PATH }}" >> $GITHUB_PATH

    - name: update path (windows)
      if: runner.os == 'Windows'
      run: echo "$(pwd)/${{ matrix.NVIM_BIN_PATH }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: install dependencies
      run: |
        python3 -m pip install -U pip
        python3 -m pip install tox tox-gh-actions

    - name: test with tox
      run: |
        echo $PATH
        which nvim
        nvim --version
        which -a python3
        python3 --version
        tox run
